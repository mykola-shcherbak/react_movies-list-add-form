{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","this","props","name","value","onChange","tag","borderColor","toUpperCase","type","style","React","PureComponent","NewMovie","state","imdbld","validation","match","isReadyToSubmit","getBorderColor","isCorrect","Object","entries","every","item","getButtonColor","backgroundColor","handleSubmit","event","preventDefault","add","setState","handleChange","target","onSubmit","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"2wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,4JACE,WACE,MAAoDC,KAAKC,MAAjDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,IAAKC,EAApC,EAAoCA,YAEpC,OACE,2BAAOlB,UAAU,SACdc,EAAKK,cACG,UAARF,EAEG,2BACEjB,UAAWiB,EACXG,KAAK,OACLN,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVK,MAAOH,IAIT,8BACElB,UAAWiB,EACXH,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVK,MAAOH,SAxBrB,GAA2BI,IAAMC,eCCpBC,EAAb,4MACEC,MAAQ,CACN7B,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACT2B,OAAQ,IANZ,EASEC,WAAa,SAACb,GACZ,IAAML,EAAM,EAAKgB,MAAMX,GAIvB,OAAQA,GACN,IAAK,cACH,OAAOL,EAAImB,MAAM,eACnB,IAAK,SACL,IAAK,QACH,OAAOnB,EAAImB,MAAM,kBACnB,IAAK,SACL,IAAK,UACH,OAAOnB,EAAImB,MAVH,sKAWV,QACE,OAAO,IAxBf,EA4BEC,gBAAkB,kBAAM,EAAKF,WAAW,UACrC,EAAKA,WAAW,WAChB,EAAKA,WAAW,YAChB,EAAKA,WAAW,WA/BrB,EAiCEG,eAAiB,SAAChB,GAChB,MAAyB,KAArB,EAAKW,MAAMX,GACN,CAAEI,YAAa,QAGpB,EAAKS,WAAWb,GACX,CAAEI,YAAa,SAGjB,CAAEA,YAAa,QA1C1B,EA6CEa,UAAY,kBAAMC,OAAOC,QAAQ,EAAKR,OACnCS,OAAM,SAAAC,GAAI,OAAI,EAAKR,WAAWQ,EAAK,KAAmB,KAAZA,EAAK,OA9CpD,EAgDEC,eAAiB,WACf,OAAO,EAAKL,YACR,CAAEM,gBAAiB,QACnB,CAAEA,gBAAiB,QAnD3B,EAsDEC,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAK3B,MAAM4B,IAAI,EAAKhB,OAEpB,EAAKiB,SAAS,CACZ9C,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACT2B,OAAQ,MAhEd,EAoEEiB,aAAe,SAACJ,GACd,MAAwBA,EAAMK,OAAtB9B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAK2B,SAAL,eAAiB5B,EAAOC,KAvE5B,4CA0EE,WACE,OACE,0BACEf,UAAU,OACV6C,SAAUjC,KAAK0B,cAEf,kBAAC,EAAD,CACErB,IAAI,QACJH,KAAK,QACLC,MAAOH,KAAKa,MAAM7B,MAClBoB,SAAUJ,KAAK+B,aACfzB,YAAaN,KAAKkB,eAAe,WAEnC,kBAAC,EAAD,CACEb,IAAI,WACJH,KAAK,cACLC,MAAOH,KAAKa,MAAM5B,YAClBmB,SAAUJ,KAAK+B,aACfzB,YAAaN,KAAKkB,eAAe,iBAEnC,kBAAC,EAAD,CACEb,IAAI,QACJH,KAAK,SACLC,MAAOH,KAAKa,MAAM3B,OAClBkB,SAAUJ,KAAK+B,aACfzB,YAAaN,KAAKkB,eAAe,YAEnC,kBAAC,EAAD,CACEb,IAAI,QACJH,KAAK,UACLC,MAAOH,KAAKa,MAAM1B,QAClBiB,SAAUJ,KAAK+B,aACfzB,YAAaN,KAAKkB,eAAe,aAEnC,kBAAC,EAAD,CACEb,IAAI,QACJH,KAAK,SACLC,MAAOH,KAAKa,MAAMC,OAClBV,SAAUJ,KAAK+B,aACfzB,YAAaN,KAAKkB,eAAe,YAGlClB,KAAKiB,kBAEF,4BAAQT,KAAK,SAASpB,UAAU,UAAhC,OAKA,4BACEoB,KAAK,SACLpB,UAAU,cACVqB,MAAOT,KAAKwB,kBAEVxB,KAAKmB,YACH,oBACA,kCAlIlB,GAA8Be,a,OCEjBC,EAAb,4MACEtB,MAAQ,CACNnB,OAAQ0C,GAFZ,EAKEC,SAAW,SAACzC,GACV,EAAKkC,UAAS,SAAAQ,GAAS,MAAK,CAAE5C,OAAO,GAAD,mBAAM4C,EAAU5C,QAAhB,CAAwBE,SANhE,4CASE,WACE,IAAQF,EAAWM,KAAKa,MAAhBnB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEM,OAAQA,KAGZ,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUyC,IAAK7B,KAAKqC,iBApB9B,GAAyBH,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.281daf81.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Input extends React.PureComponent {\n  render() {\n    const { name, value, onChange, tag, borderColor } = this.props;\n\n    return (\n      <label className=\"label\">\n        {name.toUpperCase()}\n        {tag === 'input'\n          ? (\n            <input\n              className={tag}\n              type=\"text\"\n              name={name}\n              value={value}\n              onChange={onChange}\n              style={borderColor}\n            />\n          )\n          : (\n            <textarea\n              className={tag}\n              name={name}\n              value={value}\n              onChange={onChange}\n              style={borderColor}\n            />\n          )}\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  borderColor: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tag: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbld: '',\n  };\n\n  validation = (name) => {\n    const key = this.state[name];\n    // eslint-disable-next-line\n    const reg = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    switch (name) {\n      case 'description':\n        return key.match('^[a-zA-Z]+$');\n      case 'imdbld':\n      case 'title':\n        return key.match('^[A-Za-z0-9]+$');\n      case 'imgUrl':\n      case 'imdbUrl':\n        return key.match(reg);\n      default:\n        return true;\n    }\n  }\n\n  isReadyToSubmit = () => this.validation('title')\n  && this.validation('imdbld')\n  && this.validation('imdbUrl')\n  && this.validation('imgUrl');\n\n  getBorderColor = (name) => {\n    if (this.state[name] === '') {\n      return { borderColor: 'blue' };\n    }\n\n    if (this.validation(name)) {\n      return { borderColor: 'green' };\n    }\n\n    return { borderColor: 'red' };\n  };\n\n  isCorrect = () => Object.entries(this.state)\n    .every(item => this.validation(item[0]) || item[1] === '');\n\n  getButtonColor = () => {\n    return this.isCorrect()\n      ? { backgroundColor: 'blue' }\n      : { backgroundColor: 'red' };\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.add(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbld: '',\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <Input\n          tag=\"input\"\n          name=\"title\"\n          value={this.state.title}\n          onChange={this.handleChange}\n          borderColor={this.getBorderColor('title')}\n        />\n        <Input\n          tag=\"textArea\"\n          name=\"description\"\n          value={this.state.description}\n          onChange={this.handleChange}\n          borderColor={this.getBorderColor('description')}\n        />\n        <Input\n          tag=\"input\"\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          onChange={this.handleChange}\n          borderColor={this.getBorderColor('imgUrl')}\n        />\n        <Input\n          tag=\"input\"\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={this.handleChange}\n          borderColor={this.getBorderColor('imdbUrl')}\n        />\n        <Input\n          tag=\"input\"\n          name=\"imdbld\"\n          value={this.state.imdbld}\n          onChange={this.handleChange}\n          borderColor={this.getBorderColor('imdbld')}\n        />\n\n        {this.isReadyToSubmit()\n          ? (\n            <button type=\"submit\" className=\"button\">\n              Add\n            </button>\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"buttonError\"\n              style={this.getButtonColor()}\n            >\n              { this.isCorrect()\n                ? 'Please enter data'\n                : 'Please enter correct data'\n              }\n            </button>\n          )\n      }\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  add: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({ movies: [...prevState.movies, movie] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList\n            movies={movies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie add={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}